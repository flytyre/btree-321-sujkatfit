import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

/**
 * Reads DNA sequences from a given gene bank and encodes them 
 * as binary sequences. 
 * @author 
 */
public class Interpreter {

	private File file;
	private Scanner fileScan;
	private Scanner lineScan;
	private int k;
	private String line;
	private final String flag = "ORIGIN";
	private final String DELIMITER = "[actgn]*";
	
	/**
	 * Constructor (most of this class happens in here...)
	 * @param file
	 * @param k
	 */
	public Interpreter(File file, int k) {
		
		this.file = file;
		this.k = k;
		
		try {
			fileScan = new Scanner(file);
		} catch (FileNotFoundException e) {
			System.err.println("The file " + file + " could not be found.");
			e.printStackTrace(); // for debugging, remove later
			System.exit(1);
		}
		
		// Position the scanners.
		findFlag();
		
		// Apply delimiter to line-by-line scanner.
		// Do it this way because left-to-right 
		// scanner is re-instantiated repeatedly.
		fileScan.useDelimiter(DELIMITER);

		// At this point, scanner is pointing at ORIGIN.
		// This is one line above the DNA sequences.
		if (fileScan.hasNext()) {
			String line = fileScan.next();
 
			
			
		}
	}
	
	
	/**
	 * Position the scanners right before the DNA sequence list.
	 */
	public void findFlag() {
		
		while (fileScan.hasNextLine()) {	
			lineScan = new Scanner(fileScan.nextLine());
			String token = lineScan.next();
			
			while (lineScan.hasNext()) {
				if (token.equals(flag)) {
					return;
				} 
			}	
		}
		
	}
	
	
}
	
	
